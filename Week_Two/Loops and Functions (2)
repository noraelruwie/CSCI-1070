{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c9bc402d-3815-42ba-a455-271dd4086ee0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n"
     ]
    }
   ],
   "source": [
    "#create a scenario where x starts at 3 and is incremented by 1 \n",
    "# you print the value of x while x is less than 10 \n",
    "x = 3\n",
    "while x<10:\n",
    "    print(x)\n",
    "    x+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "34694b94-72d5-4e8b-9d10-42279c223744",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dexter\n",
      "Pharoah\n",
      "Oreo\n",
      "Mitas\n",
      "Enzo\n",
      "Warmonger\n"
     ]
    }
   ],
   "source": [
    "# for loops \n",
    "cats = [\"Dexter\",\"Pharoah\",\"Oreo\",\"Mitas\",\"Enzo\",\"Warmonger\"]\n",
    "for cat in cats:\n",
    "    print(cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "24df6a6b-a1f8-46d1-98aa-2d0d18d46004",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "4\n",
      "6\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "#range(start, stop[,step])\n",
    "for r in range(2,10,2):\n",
    "    print(r)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f5c6af17-e7c7-402c-9cce-12710d13201b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#functions\n",
    "# functions let us encapsulate chunks of code that we might want to use again \n",
    "def comparing(a,b): \n",
    "    if a== b:\n",
    "        print(\"they are equal\")\n",
    "    elif a>b:\n",
    "        print(\"a is greater\")\n",
    "    elif b>a:\n",
    "        print(\"b is greater\") \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a59257df-f464-4f62-ac69-e6ec8c45854c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "b is greater\n"
     ]
    }
   ],
   "source": [
    "comparing(2,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3e87bd8b-87b0-4c42-a5f8-3cc3e2001837",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "b is greater\n"
     ]
    }
   ],
   "source": [
    "comparing(14,400)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a4e391c4-c72e-405c-b433-c15c5f4d290d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "they are equal\n"
     ]
    }
   ],
   "source": [
    "comparing(4,4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d5ef5163-76eb-46ca-8801-94596907e9b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a is greater\n"
     ]
    }
   ],
   "source": [
    "comparing(13,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7c34ae28-246c-4f8b-9813-dbc2cb0d4503",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
